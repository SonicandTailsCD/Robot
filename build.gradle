buildscript {
    repositories {
        jcenter()
        maven { 
			url = "http://files.minecraftforge.net/maven"
		}
		maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
		classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.0.10"
        classpath "net.minecraftforge:forgeBin:1.12.2-14.23.3.2678"
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'com.matthewprenger.cursegradle'
apply plugin: 'antlr'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

repositories {
    jcenter()
		
	maven { 
		name = "jitpack"
		url "https://jitpack.io" 
	}
}
version = "0.10.${buildNum}"
group = "com.dyn.robot" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "Roboticraft"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2-14.23.3.2678"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20171003"
    makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
	
	replaceIn "RobotMod.java"
	replace "@VERSION", project.version
}

configurations {
    shade
    compile.extendsFrom shade
}

dependencies {
	compile 'com.github.DomAmato:rabbit-gui:master-SNAPSHOT'

	// https://mvnrepository.com/artifact/org.java-websocket/Java-WebSocket
	shade group: 'org.java-websocket', name: 'Java-WebSocket', version: '1.3.0'
	antlr "org.antlr:antlr4:4.5.3" // use ANTLR version 4
	shade "org.antlr:antlr4-runtime:4.5.3"
}

jar {	
	
    from (sourceSets.main.output) {
        setDuplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    }
    
    configurations.shade.each{ dep ->
        from(project.zipTree(dep)){
            exclude 'META-ING', 'META-INF/**', '**/LICENSE.txt'
        }
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

curseforge {
  apiKey = "${api_key}"
  project {
    id = '294044'
    changelog = 'consult the github'
    releaseType = 'beta'
	
	relations {
        requiredLibrary 'rabbit-gui'
	}
  }
}

task incrementVersion {
    ant.propertyfile(file: "gradle.properties") {
        entry( key: "buildNum", type:"int", default:"0", operation:"+")
    }
}

//enforce correct order
tasks.build.mustRunAfter clean

//curseforge uses these tasks
tasks.curseforge.dependsOn clean, build, incrementVersion